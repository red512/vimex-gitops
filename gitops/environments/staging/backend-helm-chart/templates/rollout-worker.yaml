apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: worker
  namespace: {{ .Values.namespace.name }}
  labels:
    app: worker
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  # REMOVED: Let KEDA manage replicas, not the Rollout spec
  # replicas: {{ .Values.worker.replicaCount | default 1 }}
  
  strategy:
    canary:
      steps:
      - setWeight: 100
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - name: celery
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        workingDir: /app
        command: ["celery"]
        args:
          - "-A"
          - "app.celery"
          - "worker"
          - "--loglevel=info"
          - "--concurrency=1"
          - "--pool=solo"
          - "--without-gossip"
          - "--without-mingle"
          - "--without-heartbeat"
        env:
          - name: API_KEY
            valueFrom:
              secretKeyRef:
                name: api-key
                key: API-KEY
          - name: CELERY_BROKER_URL
            value: "redis://redis-redis-chart:6379/0"
          - name: CELERY_RESULT_BACKEND
            value: "redis://redis-redis-chart:6379/0"
          - name: C_FORCE_ROOT
            value: "true"
          # REMOVED: These env vars don't work - we configured in app.py instead
          # - name: CELERY_BROKER_TRANSPORT_OPTIONS
          # - name: CELERY_TASK_ACKS_LATE
          # - name: CELERY_TASK_REJECT_ON_WORKER_LOST
          
          # ADD: Task delay for KEDA testing
          - name: TASK_PROCESSING_DELAY
            value: "30"  # 30 seconds - set to "0" for production
        resources:
          {{- toYaml .Values.worker.resources | nindent 10 }}
        
        # FIXED: Use simple process check instead of celery inspect
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pgrep -f 'celery.*worker' || exit 1
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 12  # 60 seconds total (12 * 5)
          timeoutSeconds: 3
        
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pgrep -f 'celery.*worker' || exit 1
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
        
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pgrep -f 'celery.*worker' || exit 1
          initialDelaySeconds: 20
          periodSeconds: 30
          timeoutSeconds: 3
